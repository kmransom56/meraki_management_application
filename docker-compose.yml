services:
  cisco-meraki-cli:
    build: .
    container_name: cisco-meraki-cli-enhanced
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - DISPLAY=host.docker.internal:0.0  # For potential GUI apps
      # FortiManager Integration
      - FORTIMANAGER_HOST=${FORTIMANAGER_HOST:-}
      - FORTIMANAGER_USERNAME=${FORTIMANAGER_USERNAME:-}
      - FORTIMANAGER_PASSWORD=${FORTIMANAGER_PASSWORD:-}
      # Meraki API Configuration
      - MERAKI_API_KEY=${MERAKI_API_KEY:-}
      - MERAKI_ORG_ID=${MERAKI_ORG_ID:-}
      # Security and SSL Configuration
      - SSL_VERIFY=${SSL_VERIFY:-false}
      - REQUESTS_CA_BUNDLE=${REQUESTS_CA_BUNDLE:-}
      # Application Configuration
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - DEBUG=${DEBUG:-false}
      # AI Maintenance Engine Configuration
      - AI_MAINTENANCE_ENABLED=${AI_MAINTENANCE_ENABLED:-true}
      - AI_MAINTENANCE_CHECK_INTERVAL=${AI_MAINTENANCE_CHECK_INTERVAL:-30}
      - AI_MAINTENANCE_AUTO_FIX=${AI_MAINTENANCE_AUTO_FIX:-true}
      - AI_MAINTENANCE_DB_PATH=${AI_MAINTENANCE_DB_PATH:-/app/data/ai_maintenance.db}
      # Performance and Monitoring
      - MONITORING_ENABLED=${MONITORING_ENABLED:-true}
      - PERFORMANCE_LOGGING=${PERFORMANCE_LOGGING:-true}
    volumes:
      # Mount a config directory for user settings
      - ./config:/app/config
      # Mount a logs directory
      - ./logs:/app/logs
      # Mount a data directory for any persistent data
      - ./data:/app/data
      # Mount your existing static files if you have them
      - ./static:/app/static
      # Mount your existing templates if you have them
      - ./templates:/app/templates
      # Mount a folder for visualization outputs
      - ./outputs:/home/merakiuser/meraki_visualizations
      # Keep your existing volume mount if you have one
      - .:/app
    restart: unless-stopped
    networks:
      - meraki-network

networks:
  meraki-network:
    driver: bridge

volumes:
  config:
    driver: local
  logs:
    driver: local
  data:
    driver: local